<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <RootNamespace>Hacker_News_Feed</RootNamespace>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Autofac" Version="5.1.2" />
        <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="6.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.1" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="ClientApp\public\hacker-news-48.png" />
        <Content Include="ClientApp\src\assets\hacker-news-48.png" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <None Remove="Hacker-News-Feed.Tests\**" />
        <Content Remove="Hacker-News-Feed.Tests\**" />
    </ItemGroup>

    <ItemGroup>
      <Compile Remove="Hacker-News-Feed.Tests\**" />
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Remove="Hacker-News-Feed.Tests\**" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="Hacker-News-Feed.Tests\obj\Hacker-News-Feed.Tests.csproj.nuget.dgspec.json" />
      <_ContentIncludedByDefault Remove="Hacker-News-Feed.Tests\obj\project.assets.json" />
      <_ContentIncludedByDefault Remove="Hacker-News-Feed.Tests\obj\project.packagespec.json" />
      <_ContentIncludedByDefault Remove="ClientApp\build\asset-manifest.json" />
      <_ContentIncludedByDefault Remove="ClientApp\build\manifest.json" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
